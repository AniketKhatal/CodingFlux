//////////////////Problem https://www.geeksforgeeks.org/problems/minimum-number-of-jumps-1587115620/1
Input:
N = 11 
arr[] = {1, 3, 5, 8, 9, 2, 6, 7, 6, 8, 9} 
Output: 3 
Explanation: 
First jump from 1st element to 2nd 
element with value 3. Now, from here 
we jump to 5th element with value 9, 
and from here we will jump to the last. 
//////Solution/////////
class Solution {
    static int minJumps(int[] arr) {
        int count = 0, curr = 0, next = 0;
        
        // If the array length is 1, no jumps are needed
        if (arr.length == 1) {
            return 0;
        }
        // If the first element is 0, we cannot move forward
        if (arr[0] == 0) {
            return -1;
        }
        // Iterate through the array
        for (int i = 0; i < arr.length; i++) {
            // Update the farthest point that can be reached
            next = Math.max(next, i + arr[i]);
            // When we reach the end of the current jump range
            if (i == curr) {
                // Move to the next jump range
                curr = next;
                count++;   
                // If we have reached or passed the last element
                if (next >= arr.length - 1) {
                    return count;
                }
            }
            // If we are stuck and cannot move forward
            if (i >= next) {
                return -1;
            }
        }
        return -1;
    }
}