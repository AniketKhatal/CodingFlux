Problem statement
The n-th term of Fibonacci series F(n), where F(n) is a function, is calculated using the following formula -

    F(n) = F(n - 1) + F(n - 2), 
    Where, F(1) = 1, F(2) = 1

Provided 'n' you have to find out the n-th Fibonacci Number. Handle edges cases like when 'n' = 1 or 'n' = 2 by 
using conditionals like if else and return what's expected.
"Indexing is start from 1"
Example :
Input: 6
Output: 8

Explanation: The number is ‘6’ so we have to find the “6th” Fibonacci number.
So by using the given formula of the Fibonacci series, we get the series:    
[ 1, 1, 2, 3, 5, 8, 13, 21]
So the “6th” element is “8” hence we get the output.

///////////SOLUTION///////////
import java.util.*;
public class Solution {

	public static void main(String[] args) {
	Scanner sc = new Scanner(System.in);
        int f = 1, s = 1, t = 0;
        int n = sc.nextInt(); // Read the value of 'n' only once
        int[] arr = new int[n]; // Declare the array outside the loop
        for (int i = 0; i < n; i++) {
            arr[i] = f;
            t = f + s;
            f = s;
            s = t;            
        }
        // for(int i=0;i<arr.length;i++){
        //     System.out.println(arr[i]);
        // }
        System.out.println(arr[n-1]);
	}
}